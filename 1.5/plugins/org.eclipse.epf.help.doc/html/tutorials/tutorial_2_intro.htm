<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
"http://www.w3.org/TR/html4/loose.dtd">
<!-- 
    Copyright (c) 2005, 2006 IBM Corporation and others.
    All rights reserved. This program and the accompanying materials
    are made available under the terms of the Eclipse Public License v1.0
    which accompanies this distribution, and is available at
    http://www.eclipse.org/legal/epl-v10.html
    Contributors:
    IBM Corporation - initial implementation
-->

<html>
<head>
<title>Untitled Document</title>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
</head>

<body>
<h1><a>Tutorial: Create Method Content </a></h1>
<h2><a>Introduction </a></h2>
<p>EPF Composer separates reusable <strong>method content </strong> from its application in <strong>processes </strong>. The primary method content elements are <strong>tasks </strong>, <strong>roles </strong>, <strong>work products </strong> and <strong>guidance </strong>. A Process Engineer uses EPF Composer to author these elements, define the relationships between them, and to categorize them. Method content provides step-by-step explanations, describing how specific development goals are achieved independent of the placement of these steps within a development lifecycle. Processes take these method elements and relate them into semi-ordered sequences that are customized to specific types of projects. </p>
<p>EPF Composer supports the concept of <strong>Method Plug-ins </strong> that allows the extension or customization of base library content without directly changing that base content. When we ship a library with EPF Composer the library is protected from direct modification. The RUP plugins are grayed out in the Library view indicating that they are locked. </p>
<p><strong>You should always create new content in a Method Plug-in that you produce. </strong>This separates your content from the original OpenUP content and allows you to update your own library with new releases of the OpenUP library without affecting the content that you have created in your own plug-ins. </p>
<p>In this tutorial you will use several ‘editors'. Each editor opens in its own tab in the content display section of the screen. It is good practice to close an editor when you have finished with it. This ensures that you save any changes you make. </p>
<p>If you do have several editors open, you may want to turn on the ‘Link with Editor' feature by clicking on the Link with Editor button in the Library view toolbar. If this is selected, when you switch between editors, the element in the current editor is highlighted in the Library view. </p>
<p>The following exercises take you through the creation of “core method content”. </p>
<h2>&nbsp;</h2>
<h1>&nbsp;</h1>
</body>
</html>
